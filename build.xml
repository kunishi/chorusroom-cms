<?xml version="1.0" encoding="utf-8"?>
<project name="chorusRoom" default="build" basedir=".">

  <property name="build" value="build"/>
  <property name="build.lib" value="${build}/lib"/>
  <property name="build.xslt" value="${build.lib}/xslt"/>
  <property name='build.concours' value='${build}/concours'/>
  <property name='build.xhtml' value='${build}/xhtml'/>
  <property name='build.tmp' value='${build}/tmp'/>
  <property name='build.html.iso' value='${build}/html.iso'/>
  <property name='build.html.utf8' value='${build}/html.utf8'/>

  <property name="src" value="src"/>

  <property name="bin" value="bin"/>
  <property name="contrib" value="contrib"/>
  <property name="images" value="images"/>
  <property name="javasrc" value="java"/>
  <property name="lib" value="lib"/>
  <property name="xhtml" value="xhtml"/>
  <property name="confdir" value="${lib}/conf"/>
  <property name="cssdir" value="${lib}/css"/>
  <property name="dtddir" value="${lib}/dtd"/>
  <property name="namazudir" value="${lib}/namazu"/>
  <property name="techdir" value="${lib}/tech"/>
  <property name="xsltdir" value="${lib}/xslt"/>
  <property name="classdir" value="${build}/java"/>
  <property name="dtdparser.src" value="${contrib}/dtdparser/source"/>

  <property name="xalan2.bin.dir"
            value="/usr/local/share/java/xalan-j-2.3.1/bin"/>
  <path id="xalan2.class.path">
    <pathelement location="${xalan2.bin.dir}/xml-apis.jar"/>
    <pathelement location="${xalan2.bin.dir}/xercesImpl.jar"/>
    <pathelement location="${xalan2.bin.dir}/xalan.jar"/>
  </path>

  <xmlcatalog id="chorusroom.dtd">
    <dtd publicId="-//CHORUSROOM//DTD XHTML 1.0 Strict Ext//JA"
         location="${dtddir}/xhtml1-chorusroom.dtd"/>
    <dtd publicId="-//CHORUSROOM//DTD Contest JCA 1.0//JA"
         location="${dtddir}/jca-comp-result.dtd"/>
    <dtd publicId="-//CHORUSROOM//DTD Contest NHK 1.0//JA"
         location="${dtddir}/nhk-contest-result.dtd"/>
    <dtd publicId="-//CHORUSROOM//DTD Contest Generic 1.0//JA"
         location="${dtddir}/contest-result-generic.dtd"/>
    <dtd publicId="-//CHORUSROOM//DTD Contest GivenProg 1.0//JA"
         location="${dtddir}/given-programs.dtd"/>
    <dtd publicId="-//CHORUSROOM//DTD Choir 1.0//JA"
         location="${dtddir}/choir.dtd"/>
    <dtd publicId="-//CHORUSROOM//DTD Resource 1.0//JA"
         location="${dtddir}/resource.dtd"/>
    <dtd publicId="-//CHORUSROOM//DTD CharTable 1.0//JA"
         location="${dtddir}/char-table.dtd"/>
  </xmlcatalog>

  <taskdef name='relaxerDtd' classname='org.chorusroom.ant.RelaxerDTD'>
    <classpath>
      <pathelement path='prog/java'/>
    </classpath>
  </taskdef>

  <taskdef name='myxslt' classname='org.chorusroom.ant.XSLT'>
    <classpath>
      <pathelement path='prog/java'/>
    </classpath>
  </taskdef>

  <target name="build" depends="build.html.iso, build.html.utf8"/>

  <target name="prepare" depends="build.dtd">
    <tstamp/>
    <mkdir dir="${build}"/>
  </target>

  <!-- copy necessary files other than HTML and XML -->
  <target name="copysrc">
    <copy todir="${build.xhtml}">
      <fileset dir="${xhtml}">
        <include name="**/*"/>
        <exclude name="**/*.xml"/>
      </fileset>
    </copy>
    <copy todir="${build.xhtml}/image">
      <fileset dir="${images}">
	<include name="**/*.png"/>
      </fileset>
    </copy>
    <copy todir="${build.xhtml}/namazu">
      <fileset dir="${lib}/namazu">
        <include name="**/*"/>
      </fileset>
    </copy>
    <copy todir="${build.xhtml}/style">
      <fileset dir="${lib}/css">
        <include name="*.css"/>
      </fileset>
    </copy>
  </target>

  <!-- build DTDs using Relaxer -->
  <target name='build.dtd'
    depends='build.dtd.contest-result-generic, build.dtd.jca-comp-result,
             build.dtd.nhk-contest-result, build.dtd.xhtml1-chorusroom,
             build.dtd.given-programs, build.dtd.char-table,
             build.dtd.resource'/>

  <target name="build.dtd.contest-result-generic" depends='copysrc'>
    <relaxerDtd dir='${dtddir}' relaxfile='contest-result-generic.rxg'
      verify='none' tagprefix='-,p,cr'/>
  </target>

  <target name="build.dtd.jca-comp-result" depends='copysrc'>
    <relaxerDtd dir='${dtddir}' relaxfile='jca-comp-result.rxg'
      verify='none' tagprefix='-,p,cr'/>
  </target>

  <target name="build.dtd.nhk-contest-result" depends='copysrc'>
    <relaxerDtd dir='${dtddir}' relaxfile='nhk-contest-result.rxg'
      verify='none' tagprefix='-,p,cr'/>
  </target>

  <target name="build.dtd.xhtml1-chorusroom" depends='copysrc'>
    <relaxerDtd dir='${dtddir}' relaxfile='xhtml1-chorusroom.rxg'
      verify='none' tagprefix='-,cr,r'/>
  </target>

  <target name="build.dtd.given-programs" depends='copysrc'>
    <relaxerDtd dir='${dtddir}' relaxfile='given-programs.rxg'
      verify='none' tagprefix='-,p,cr'/>
  </target>

  <target name="build.dtd.char-table" depends='copysrc'>
    <relaxerDtd dir='${dtddir}' relaxfile='char-table.rxm' verify='none'/>
  </target>

  <target name="build.dtd.resource" depends='copysrc'>
    <relaxerDtd dir='${dtddir}' relaxfile='resource.rxm' verify='none'/>
    <copy toDir='${build}/DTD'>
      <fileset dir='${dtddir}'>
	<include name='resource.xml'/>
      </fileset>
    </copy>
  </target>

  <!-- generating XSLT styesheet -->
  <target name='build.xslt'
    depends='build.xslt.common, build.xslt.contest-result,
             build.xslt.xhtml1, build.xslt.char-conv'/>

  <target name='build.xslt.common'>
    <copy todir='${build.xslt}'>
      <fileset dir='${xsltdir}'>
	<include name='character.xsl'/>
	<include name='common.xsl'/>
	<include name='contest-result-choir-piece.xsl'/>
	<include name='resource.xsl'/>
        <include name='xhtml1-choir-links.xsl'/>
        <include name='xhtml1-finalize-iso.xsl'/>
        <include name='xhtml1-finalize-utf8.xsl'/>
        <include name='xinclude.xsl'/>
      </fileset>
    </copy>
  </target>

  <target name='build.xslt.contest-result'>
    <xslt style='${xsltdir}/gen-xsl-with-encoding.xsl'
          in='${xsltdir}/contest-result.src.xsl'
          out='${build.xslt}/contest-result.traditional.xsl'
          outputtype='xml' processor='trax'>
      <xmlcatalog refid="chorusroom.dtd"/>
      <classpath refid='xalan2.class.path'/>
      <param name='output-encoding' expression='iso-2022-jp'/>
    </xslt>
    <xslt style='${xsltdir}/gen-xsl-with-encoding.xsl'
          in='${xsltdir}/contest-result.src.xsl'
          out='${build.xslt}/contest-result.utf8.xsl'
          outputtype='xml' processor='trax'>
      <xmlcatalog refid="chorusroom.dtd"/>
      <classpath refid='xalan2.class.path'/>
      <param name='output-encoding' expression='utf-8'/>
    </xslt>
  </target>

  <target name='build.xslt.xhtml1'>
    <xslt style='${xsltdir}/gen-xsl-with-encoding.xsl'
      in='${xsltdir}/xhtml1-chorusroom.src.xsl'
      out='${build.xslt}/xhtml1-chorusroom.traditional.xsl'
      outputtype='xml' processor='trax'
      classpathref='xalan2.class.path'>
      <xmlcatalog refid="chorusroom.dtd"/>
      <param name='output-encoding' expression='iso-2022-jp'/>
    </xslt>
    <xslt style='${xsltdir}/gen-xsl-with-encoding.xsl'
      in='${xsltdir}/xhtml1-chorusroom.src.xsl'
      out='${build.xslt}/xhtml1-chorusroom.utf8.xsl'
      outputtype='xml' processor='trax'
      classpathref='xalan2.class.path'>
      <xmlcatalog refid="chorusroom.dtd"/>
      <param name='output-encoding' expression='utf-8'/>
    </xslt>
  </target>

  <target name='build.xslt.char-conv'>
    <xslt style='${xsltdir}/gen-char-conv-traditional.xsl'
      in='${techdir}/all-chars.xml'
      out='${build.xslt}/char-conv-traditional.xsl'
      outputtype='xml' processor='trax'
      classpathref='xalan2.class.path'>
      <xmlcatalog refid="chorusroom.dtd"/>
    </xslt>
    <xslt style='${xsltdir}/gen-char-conv-utf8.xsl'
      in='${techdir}/all-chars.xml'
      out='${build.xslt}/char-conv-utf8.xsl'
      outputtype='xml' processor='trax'
      classpathref='xalan2.class.path'>
      <xmlcatalog refid="chorusroom.dtd"/>
    </xslt>
  </target>
  
  <!-- build contents -->
  <target name='build.xhtml'
          depends='build.xhtml.index, build.xhtml.ja, build.xhtml.en, build.xhtml.concours'/>

  <target name='build.xhtml.index' depends='build.xslt'>
    <xslt basedir='${xhtml}' destdir='${build.xhtml}'
      style='${build.xslt}/xhtml1-chorusroom.traditional.xsl'
      extension='.xml' outputtype='xml' processor='trax'
      includes='index.xml'
      classpathref='xalan2.class.path'>
      <xmlcatalog refid="chorusroom.dtd"/>
      <param name='topdir' expression='/'/>
      <param name='imagedir' expression='/image'/>
      <param name='bgimage' expression='background.png'/>
      <param name='styledir' expression='/style'/>
      <param name='stylesheet' expression='toppage.css'/>
    </xslt>
  </target>

  <target name='build.xhtml.ja' depends='build.xslt'>
    <xslt basedir='${xhtml}' destdir='${build.xhtml}'
      style='${build.xslt}/xhtml1-chorusroom.traditional.xsl'
      extension='.xml' outputtype='xml' processor='trax'
      includes='**/*.xml' excludes='index.xml, info-note2.xml'
      classpathref='xalan2.class.path'>
      <xmlcatalog refid="chorusroom.dtd"/>
      <param name='topdir' expression='/'/>
      <param name='imagedir' expression='/image'/>
      <param name='bgimage' expression='background.png'/>
      <param name='styledir' expression='/style'/>
      <param name='stylesheet' expression='default.css'/>
    </xslt>
  </target>

  <target name='build.xhtml.en' depends='build.xslt'>
    <xslt basedir='${xhtml}' destdir='${build.xhtml}'
      style='${build.xslt}/xhtml1-chorusroom.utf8.xsl'
      extension='.xml' outputtype='xml' processor='trax'
      includes='info-note2.xml'
      classpathref='xalan2.class.path'>
      <xmlcatalog refid="chorusroom.dtd"/>
      <param name='topdir' expression='/'/>
      <param name='imagedir' expression='/image'/>
      <param name='bgimage' expression='background.png'/>
      <param name='styledir' expression='/style'/>
      <param name='stylesheet' expression='default.css'/>
    </xslt>
  </target>

  <target name='build.xml.concours'
    depends='build.xml.jca, build.xml.nhk, build.xml.generic'/>

  <target name='build.xml.jca'>
    <xslt basedir='db/concours/JCA' destdir='${build.tmp}/concours/JCA'
      style='${lib}/xslt.build/jca-contest-result-build.xsl'
      extension='.xml' outputtype='xml' processor='trax'
      includes='**/*.xml' excludes='**/lib/*.xml'
      classpathref='xalan2.class.path'>
      <xmlcatalog refid="chorusroom.dtd"/>
      <param name='docBaseURI' expression='${basedir}/db/concours/JCA/lib/'/>
      <param name='outDir' expression='Redirect/'/>
    </xslt>
    <copy todir="${build.concours}/JCA">
      <fileset dir="${build.tmp}/concours/JCA">
        <include name='**/Redirect/*.xml'/>
      </fileset>
      <mapper type="regexp" from="^(.*)/Redirect/(.*.xml)$$" to="\1/\2"/>
    </copy>
  </target>

  <target name='build.xml.nhk'>
    <xslt basedir='db/concours/NHK' destdir='${build.tmp}/concours/NHK'
      style='${lib}/xslt.build/contest-result-build.xsl'
      extension='.xml' outputtype='xml' processor='trax'
      includes='**/*.xml' excludes='**/lib/*.xml'
      classpathref='xalan2.class.path'>
      <xmlcatalog refid="chorusroom.dtd"/>
      <param name='docBaseURI' expression='${basedir}/db/concours/NHK/lib/'/>
      <param name='outDir' expression='Redirect/'/>
    </xslt>
    <copy todir="${build.concours}/NHK">
      <fileset dir="${build.tmp}/concours/NHK">
        <include name='**/Redirect/*.xml'/>
      </fileset>
      <mapper type="regexp" from="^(.*)/Redirect/(.*.xml)$$" to="\1/\2"/>
    </copy>
  </target>

  <target name='build.xml.generic'>
    <xslt basedir='db/concours' destdir='${build.tmp}/concours'
      style='${lib}/xslt.build/contest-result-build.xsl'
      extension='.xml' outputtype='xml' processor='trax'
      includes='**/*.xml'
      excludes='**/JCA/**/*.xml, **/NHK/**/*.xml'
      classpathref='xalan2.class.path'>
      <xmlcatalog refid="chorusroom.dtd"/>
      <param name='docBaseURI' expression='${basedir}/db/concours/lib/'/>
      <param name='outDir' expression='Redirect/'/>
    </xslt>
    <copy todir="${build.concours}">
      <fileset dir="${build.tmp}/concours">
        <include name='**/Redirect/*.xml'/>
        <exclude name='**/JCA/**/Redirect/*.xml'/>
        <exclude name='**/NHK/**/Redirect/*.xml'/>
      </fileset>
      <mapper type="regexp" from="^(.*)/Redirect/(.*.xml)$$" to="\1/\2"/>
    </copy>
  </target>

  <target name='build.xhtml.concours'
    depends='build.xslt.common, build.xslt.contest-result, build.xml.concours'>
    <xslt basedir='${build.concours}' destdir='${build.xhtml}/concours'
      style='${build.xslt}/contest-result.utf8.xsl'
      extension='.xml' outputtype='xml' processor='trax'
      includes='**/*.xml' excludes='**/*-score.xml'
      classpathref='xalan2.class.path'>
      <xmlcatalog refid="chorusroom.dtd"/>
      <param name='topdir' expression='/'/>
      <param name='imagedir' expression='/image'/>
      <param name='bgimage' expression='background.png'/>
      <param name='styledir' expression='/style'/>
      <param name='stylesheet' expression='default.css'/>
      <param name='outDir' expression='${build.xhtml}/concours/'/>
    </xslt>
  </target>

  <target name='build.html.iso' depends='build.xhtml'>
    <xslt basedir='${build.xhtml}' destdir='${build.html.iso}'
      style='${build.xslt}/xhtml1-finalize-iso.xsl'
      extension='.html' outputtype='html' processor='trax'
      includes='**/*.xml'
      classpathref='xalan2.class.path'/>
  </target>

  <!-- finalize -->
  <target name='build.html.utf8' depends='build.xhtml'>
    <xslt basedir='${build.xhtml}' destdir='${build.html.utf8}'
      style='${build.xslt}/xhtml1-finalize-utf8.xsl'
      extension='.html' outputtype='xml' processor='trax'
      includes='**/*.xml'
      classpathref='xalan2.class.path'/>
  </target>

  <!-- clean -->
  <target name="clean">
    <delete dir="${build}"/>
    <delete dir="${build.lib}"/>
    <delete dir="${build.concours}"/>
    <delete dir="${build.tmp}"/>
  </target>

  <target name="distclean">
    <delete dir="${build}"/>
  </target>
</project>
